<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- 全局配置 -->
    <settings>
        <!--    全局映射器关闭二级缓存   -->
        <setting name="cacheEnabled" value="false"/>

        <!--    允许 JDBC 支持自动生成主键    -->
        <setting name="useGeneratedKeys" value="true"/>

        <!--    配置默认的执行器，SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新   -->
        <setting name="defaultExecutorType" value="REUSE"/>

        <!--    指定 MyBatis 所用日志门面，配置成STDOUT_LOGGING时，会和自定义的SqlStatementInterceptor重复打印，所以这里使用SLF4J -->
        <setting name="logImpl" value="SLF4J"/>
        <!--   <setting name="logImpl" value="STDOUT_LOGGING"/> -->

        <!--    mapper 驼峰式命名映射全局配置, 关闭后可以自行 resultMap 映射 , 这个只会对实体类有作用，而不会影响到Map值返回  -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!--  返回resultType=”map”时，如果数据为空的字段，则该字段省略不显示，可以通过添加该配置，规定查询数据为空时则返回null  -->
        <!--  <setting name="callSettersOnNulls" value="true"/> -->
    </settings>

    <!-- 自定义插件-->
    <plugins>
        <!-- 分页插件 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!--
            分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect属性来指定分页插件使用哪种方言。配置时，可以使用下面的缩写值：
            oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby
            特别注意：使用 SqlServer2012 数据库时，需要手动指定为 sqlserver2012，否则会使用 SqlServer2005 的方式进行分页
            -->
            <!--<property name="helperDialect" value="mysql"/>-->
            <!--
            默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。
            当该参数设置为 true 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页。
            -->
            <property name="offsetAsPageNum" value="false"/>
            <!--
            默认值为false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为true时，使用 RowBounds 分页会进行 count 查询。
            -->
            <property name="rowBoundsWithCount" value="true"/>
            <!--
            默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。
            -->
            <property name="pageSizeZero" value="true"/>
            <!--
            分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
            -->
            <property name="reasonable" value="false"/>
            <!--
            为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值
             默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero。
            -->
            <property name="params" value="pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero"/>
            <!--
            支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
            使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest。
            -->
            <property name="supportMethodsArguments" value="false"/>
            <!--
            默认值为 false。设置为 true 时，允许在运行时根据多数据源自动识别对应方言的分页 （不支持自动选择sqlserver2012，只能使用sqlserver）
            -->
            <property name="autoRuntimeDialect" value="true"/>
            <!--
            默认值为 true。当使用运行时动态数据源或没有设置 helperDialect 属性自动获取数据库类型时，会自动获取一个数据库连接， 通过该属性来设置是否关闭获取的这个连接
            默认true关闭，设置为 false 后，不会关闭获取的连接，这个参数的设置要根据自己选择的数据源来决定。
            -->
            <property name="closeConn" value="true"/>
            <!-- 默认执行count -->
            <property name="defaultCount" value="true"/>
        </plugin>

        <!-- mybatis日志记录插件，必须在分页插件后面 -->
        <plugin interceptor="com.bluewind.boot.common.config.mybatis.MybatisSqlLogInterceptor">
            <property name="isOpen" value="true"/>
            <property name="isOpenSqlMonitor" value="true"/>
            <property name="maxTime" value="5000"/>
            <property name="recordResult" value="false"/>
        </plugin>
    </plugins>

</configuration>
